name: watchOS build & test

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

jobs:
  build:
    name: Build and Test watchOS app
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set Scheme
        run: |
          default="SetPoint Watch App"
          echo $default | cat >default
          echo Using scheme: $default

      - name: Build (watchOS)
        env:
          scheme: ${{ 'default' }}
          platform: ${{ 'watchOS Simulator' }}
        run: |
          OS="11.5"
          device=`xcrun xctrace list devices 2>&1 | grep -oE 'Apple Watch.*[^\(]+' | head -1 | awk '{$1=$1;print}'`
          if [ $scheme = default ]; then scheme=$(cat default); fi
          if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
          file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
          echo "Building scheme: $scheme on device: $device"
          xcodebuild build-for-testing -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "platform=$platform,name=$device,OS=$OS"

      - name: Test (watchOS)
        env:
          scheme: ${{ 'default' }}
          platform: ${{ 'watchOS Simulator' }}
        run: |
          OS="11.5"
          device=`xcrun xctrace list devices 2>&1 | grep -oE 'Apple Watch.*[^\(]+' | head -1 | awk '{$1=$1;print}'`
          if [ $scheme = default ]; then scheme=$(cat default); fi
          if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
          file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
          echo "Testing scheme: $scheme on device: $device"
          xcodebuild test-without-building -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "platform=$platform,name=$device,OS=$OS"
