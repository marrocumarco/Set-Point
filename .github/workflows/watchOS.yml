name: watchOS build & test

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]
  workflow_dispatch:

jobs:
  build:
    name: Build and Test watchOS app
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Select Scheme & Simulator
        run: |
          # scheme esplicito (deve essere Shared in Xcode)
          echo "SCHEME=SetPoint Watch App" >> $GITHUB_ENV
          
          # cerca un simulatore Apple Watch SE (40mm) con OS 11.5
          uuid=$(xcrun simctl list devices | grep "Apple Watch SE (40mm) (2nd generation) (11.5)" | grep -oE '[0-9A-F-]{36}' | head -1)
          if [ -z "$uuid" ]; then
            echo "❌ Nessun simulatore Apple Watch trovato"
            xcrun simctl list devices
            exit 1
          fi
          echo "UUID=$uuid" >> $GITHUB_ENV
          echo "Trovato simulatore con id: $uuid"

      - name: Build & Test (watchOS)
        run: |
          if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
          file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`

          mkdir -p "$PWD/DerivedData"

          echo "▶️ Building & testing scheme: $SCHEME on simulator id: $UUID"

          xcodebuild test \
            -scheme "$SCHEME" \
            -"$filetype_parameter" "$file_to_build" \
            -sdk watchsimulator \
            -destination "id=$UUID" \
            -derivedDataPath "$PWD/DerivedData" \
            -enableCodeCoverage YES
